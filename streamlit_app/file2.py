# -*- coding: utf-8 -*-
"""File2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XULgNwxbEm_Ap__KfLuLHN7NrJTcDJvb
"""

import streamlit as st
import pandas as pd
import re
import string
import nltk
import joblib
from nltk.corpus import stopwords
from nltk.tokenize import word_tokenize
from nltk.stem import WordNetLemmatizer
from sklearn.feature_extraction.text import TfidfVectorizer

# Initialize Lemmatizer
nltk.download('punkt')
nltk.download('stopwords')
nltk.download('wordnet')

# Set the NLTK data directory
nltk.data.path.append('./nltk_data')

lemmatizer = WordNetLemmatizer()
stop_words = set(stopwords.words('english'))

# Preprocessing function
def preprocess_text(text):
    if pd.isna(text):
        return ""
    text = text.lower()
    text = re.sub(r'http\S+|www\S+|https\S+', '', text, flags=re.MULTILINE)
    text = re.sub(r'@\w+', '', text)
    text = text.translate(str.maketrans('', '', string.punctuation))
    text = re.sub(r'\d+', '', text)
    tokens = word_tokenize(text)
    tokens = [word for word in tokens if word not in stop_words]
    tokens = [lemmatizer.lemmatize(word) for word in tokens]
    return ' '.join(tokens)

# Load the model and TF-IDF vectorizer
model = joblib.load('best_nb_model.pkl')
tfidf_vectorizer = joblib.load('tfidf_vectorizer.pkl')
label_encoder = joblib.load('label_encoder.pkl')

# Streamlit UI
st.title("Disaster Tweet Prediction")
st.write("Enter a tweet to predict whether it's about a disaster or not.")

# Text input
user_input = st.text_input("Tweet")

if user_input:
    # Preprocess the input
    cleaned_input = preprocess_text(user_input)

    # Vectorize the input
    vectorized_input = tfidf_vectorizer.transform([cleaned_input]).toarray()

    # Make prediction
    prediction = model.predict(vectorized_input)

    # Decode the label
    decoded_prediction = label_encoder.inverse_transform(prediction)[0]

    # Display the result
    if decoded_prediction == 1:
        st.write("The tweet is predicted to be about a disaster.")
    else:
        st.write("The tweet is predicted to be not about a disaster.")

